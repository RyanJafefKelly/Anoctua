{
    "collab_server" : "",
    "contents" : "# SH 05-10-2016\n#\n# forward simulation script\n#\n#-#-#-#-#-#-#-#-#-#-#\n\n##########\n# Setup  #\n#--------##--------##--------##--------##--------##--------##--------##--------#\n#set seed\nset.seed(06102016)\n\n# load packages\nlibrary(sp)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(raster)\nlibrary(LOSim)\nlibrary(spatstat)\n\n\n# source functions\nsource(\"../code/forwardSimulation.r\")\nsource(\"../code/plotLOSim.r\")\n\n\n#--------##--------##--------##--------##--------##--------##--------##--------#\n\n# load posterior\nload(\"../data/posterior_JF.RData\")\n\n# load habitat suitability\nhabitatSuitability <- raster(\"../envVars/JF/S123_bins.tif\")\nproj4string(habitatSuitability) <- CRS(\"+init=epsg:31467\")\n# habitatSuitability <- habitatSuitability + 0.1 # to differentiate NAs from low habitat suitability\nhabitatSuitability[is.na(values(habitatSuitability))] <- 0 # set NAs to zero <- reflection\n\nHSvals <- as.matrix(habitatSuitability)\n\nHS <- list(values = HSvals, upperleft = extent(habitatSuitability)[c(1,4)], resolution = raster::res(habitatSuitability)[1])\n\n\n#--------##--------##--------##--------##--------##--------##--------##--------#\n\n# load occurences to provide start locations\nload(\"../data/occurrences_JF.RData\")\nnas <- which(extract(habitatSuitability, as(occ, \"SpatialPoints\")) == 0)\n# select locations from 2012 to 2015\nstartLocs <- data.frame(x = coordinates(occ)[-nas, 1],\n                        y = coordinates(occ)[-nas, 2],\n                        occ@data[-nas,])\n\n# resample locations\n# targetSize <- 10000\n# startLocs <- startLocs[sample(NROW(startLocs), size = targetSize, replace = TRUE),]\ntargetSizePop <- 1000\nstartLocs <- startLocs[c(sapply(unique(startLocs$pop.ID), function(x) sample(which(startLocs$pop.ID == x), size = targetSizePop, replace = TRUE))), ]\n\n\n#--------##--------##--------##--------##--------##--------##--------##--------#\n# add option to define simulation period in LOSim::runSimulation\n\n# make simulations\nsim55 <- LOSim(posteriorObj = posterior,\n               habitatSuitability = HS,\n               individuals = NULL,\n               startLocations = startLocs,\n               fixParameters = c(2,1.5,0.7,6000),\n               maxPeriod = 60,\n               maxIterations = 40000,\n               generations = 55,\n               randomSeed = NULL,\n               reflection = 30,\n               reflectionValues = 0,\n               parallel = TRUE,\n               clusterType = \"SOCK\")\n\n\n\n\n#--------##--------##--------##--------##--------##--------##--------##--------#\n# save(sim50, file = \"../data/forwardSimulation50_JF.RData\")\n# load(\"../data/forwardSimulation50_JF.RData\")\n# plot results\nx11(8,10)\nplot(habitatSuitability, xlab = \"\", ylab = \"\")\nplotLOSim(sim50, plotHS = \"onTop\", col = rgb(0,0,0,0.1))\n\n\n\n#--------##--------##--------##--------##--------##--------##--------##--------#\n#--------##--------##--------##--------##--------##--------##--------##--------#\n#--------##--------##--------##--------##--------##--------##--------##--------#\n#--------##--------##--------##--------##--------##--------##--------##--------#\n\n# plotting\n\n# # reduce simulations to one data.frame\n# simulations <- vector(\"list\", length(sim50$simulations))\n# for(g in seq_along(sim50$simulations)){\n#   simulations[[g]] <- do.call(rbind, sim50$simulations[[g]])\n# }\n# simulations <- do.call(rbind, simulations)\n# simulations <- as.data.frame(simulations[,c(\"x\",\"y\")])\n# simulations$value <- 1\n# \n# # produce point shapefile\n# simSpP <- SpatialPointsDataFrame(coords = simulations, data = simulations,\n#                                  proj4string = CRS(proj4string(habitatSuitability)))\n# \n# writeOGR(simSpP, dsn = \"../data\", layer=\"forwardSimulation50sp\", driver=\"ESRI Shapefile\")\n# \n# #--------##--------##--------##--------##--------##--------##--------##--------#\n# \n# # 5 year step-wise boundary shapes plot\n# library(maptools)\n# \n# # interval\n# interval <- 5\n# # buffer radius\n# radius <- 200\n# # output\n# boundaries <- vector(\"list\", floor(length(sim50$simulations)/interval))\n# \n# # reduce to generations\n# simulations <- vector(\"list\", length(sim50$simulations))\n# for(g in seq_along(sim50$simulations)){\n#   simulations[[g]] <- do.call(rbind, sim50$simulations[[g]])\n# }\n# \n# # split into interval\n# index = 1 # initiate loop counter\n# for(g in seq(interval, length(sim50$simulations), interval)){\n#   # chop up simulations\n#   chopped <- as.data.frame(do.call(rbind, simulations[(g-interval+1):g])[,c(\"x\",\"y\")])\n#   chopped$generation <- g\n#   \n#   \n#   # to point shapefile\n#   spdf <- SpatialPointsDataFrame(coords = chopped[,c(\"x\",\"y\")], data = chopped,\n#                                  proj4string = CRS(proj4string(habitatSuitability)))\n#   \n#   # write to shapefile\n#   writeOGR(spdf, dsn = \"../data/generationIntervals\", layer=paste0(\"loc_gen\",g), driver=\"ESRI Shapefile\")\n#   \n#   #test <- gBuffer(spdf, width=radius, quadsegs=1, capStyle=\"Round\", id=g)\n#   \n#   # loop counter\n#   index = index + 1\n# }\n\n\n# # ppp\n# library(graphics)\n# smoothScatter(simulations[,\"x\"], simulations[,\"y\"], nbin = 256, nrpoints = 100, \n#               colramp = colorRampPalette(c(rgb(1,1,1,0), blues9)), add = T)\n",
    "created" : 1503479400213.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3546898527",
    "id" : "C6FF911",
    "lastKnownWriteTime" : 1504171582,
    "last_content_update" : 1504171582742,
    "path" : "~/Documents/Uni/projects/littleowl/code/forwardSimulation_script_JF.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}