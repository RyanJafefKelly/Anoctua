{
    "collab_server" : "",
    "contents" : "\n# summary statistics\nsumStats <- function(observed, n){\n  # habitat preference\n  ss1 <- quantile(observed[, \"habitatSuitabilityObserved\"], probs = c(0.1,0.9), na.rm = TRUE) # ,0.2,0.8\n  ss2 <- sd(observed[, \"habitatSuitabilityObserved\"], na.rm = TRUE)\n  ss3 <- mean(observed[, \"habitatSuitabilityObserved\"], na.rm = TRUE)\n  \n  # gamma distribution: step length, perception range\n  from <- sample(NROW(observed), size = n, replace = TRUE)\n  to <- sample(NROW(observed), size = n, replace = TRUE)\n  deltaT <- abs(observed[to, \"timestamp\"] - observed[from, \"timestamp\"])\n  distCum <- sapply(1:n, function(x) sum(observed[from[x]:to[x], \"stepDistanceObserved\"], \n                                         na.rm = TRUE)) \n  distDir <- sqrt((observed[to, \"xObserved\"] - observed[from, \"xObserved\"])^2 + \n                    (observed[to, \"yObserved\"] - observed[from, \"yObserved\"])^2)\n  \n  stepFm <- lm(deltaT ~ distCum + I(distCum^2) + distDir)\n  ss4 <- stepFm$coefficients\n  \n  # points less than 30 min apart\n  timeDiff <- diff(observed[, \"timestamp\"])\n  shortSteps <- which(timeDiff < 30) + 1\n  \n  # distances traveled in short time intervals\n  shortDist <- observed[shortSteps, \"stepDistanceObserved\"]\n  ss5 <- sd(shortDist, na.rm = TRUE)\n  ss6 <- mean(shortDist, na.rm = TRUE)\n  ss7 <- quantile(shortDist,  probs = c(0.1,0.9), na.rm = TRUE) # ,0.2,0.8\n  \n  # angles during short time intervals\n  shortAngle <- observed[shortSteps, \"turningAngleObserved\"]\n  ss8 <- sd(shortAngle, na.rm = TRUE)\n  ss9 <- mean(shortAngle, na.rm = TRUE)\n  ss10 <- quantile(shortAngle,  probs = c(0.1,0.2,0.8,0.9), na.rm = TRUE)\n  \n  # start-end distance\n  ss11 <- sqrt((observed[NROW(observed), \"xObserved\"] - observed[1, \"xObserved\"])^2 + \n                 (observed[NROW(observed), \"yObserved\"] - observed[1, \"yObserved\"])^2)\n  \n  # max. effort\n  qfm <- quantreg::rq(distCum ~ deltaT, tau = c(0.1, 0.9), model = FALSE) # , 0.2, 0.8\n  ss12 <- qfm$coefficients\n  \n  # distCum moments\n  ss13 <- quantile(distCum, probs = c(0.1,0.9), na.rm = TRUE) # ,0.2,0.8\n  ss14 <- quantile(distDir, probs = c(0.1,0.9), na.rm = TRUE) # ,0.2,0.8\n  ss15 <- moments::skewness(distCum, na.rm = TRUE)\n  ss16 <- moments::skewness(distDir, na.rm = TRUE)\n  \n  # extent of movement for max effort\n  ss17 <- (max(observed[, \"xObserved\"]) - min(observed[, \"xObserved\"])) *\n    (max(observed[, \"yObserved\"]) - min(observed[, \"yObserved\"]))\n  # cumulated step distance\n  ss18 <- sum(observed[, \"stepDistanceObserved\"], na.rm = TRUE)\n  ss19 <- sum(distCum, na.rm = TRUE)\n  ss20 <- sum(distDir, na.rm = TRUE)\n  # convex hull area\n  chpts <- grDevices::chull(observed[,c(\"xObserved\",\"yObserved\")])\n  chpts <- c(chpts, chpts[1])\n  ss21 <- sp::Polygon(observed[chpts ,c(\"xObserved\",\"yObserved\")], hole = F)@area\n  \n  # cluster in distance matrix\n  dd = sp::spDists(observed[,c(\"xObserved\",\"yObserved\")])\n  hdd <- hist(as.vector(dd), breaks = nrow(observed)/2, plot = FALSE)\n  ss22 <- sd(hdd$counts)\n  ss23 <- sum(diff(sign(diff(hdd$counts)))==-2)\n  \n  # \n  qfm <- quantreg::rq(distDir ~ deltaT, tau = c(0.1,0.8,0.9), model = FALSE) # , 0.2\n  ss24 <- qfm$coefficients\n  \n  # skewness of hs\n  ss25 <- moments::skewness(observed[, \"habitatSuitabilityObserved\"], na.rm = TRUE)\n  \n  # resource selection function\n  ss26 <- mean(observed[, \"rsc\"], na.rm = TRUE)\n  ss27 <- sd(observed[, \"rsc\"], na.rm = TRUE)\n  ss28 <- quantile(observed[, \"rsc\"], probs=c(.1,.2,.8,.9),na.rm = TRUE)\n  \n  out <- unlist(sapply(seq.int(28), function(x) get(paste0(\"ss\",x))))\n  names(out) <- NULL\n  return(out)\n  \n}\n",
    "created" : 1503651752737.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "523166175",
    "id" : "21E8D8CB",
    "lastKnownWriteTime" : 1501753382,
    "last_content_update" : 1501753382,
    "path" : "~/Documents/Uni/projects/littleowl/code/sumStats.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}